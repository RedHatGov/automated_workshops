# openstack packstack 3-node kvm-based demo playbook
# Jamie Duncan - jduncan@redhat.com

- name: Check for an Atomic Host upgrade
  command: atomic host upgrade
  register: atomic_upgrade
  when: patch_systems == 'true'

- name: reboot each system
  shell: sleep 2 && systemctl reboot
  async: 1
  poll: 0
  ignore_errors: true
  when: atomic_upgrade.changed

- name: wait for server to come back
  local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300 port=22
  sudo: false
  when: atomic_upgrade.changed

- name: configure /etc/etcd/etcd.conf on master
  template: src=templates/etcd.conf dest=/etc/etcd/etcd.conf
  when: role == 'master'

- name: configure /etc/kubernetes/config for all hosts
  template: src=templates/kubernetes_config dest=/etc/kubernetes/config

- name: configure /etc/kubernetes/apiserver for master
  template: src=templates/kubernetes_apiserver_master dest=/etc/kubernetes/apiserver
  when: role == 'master'

- name: restart and enable etcd on master
  service: name=etcd state=restarted enabled=yes
  when: role == 'master'

- name: restart and enable kube-apiserver service on master
  service: name=kube-apiserver state=restarted enabled=yes
  when: role == 'master'

- name: restart and enable kube-controller-manager service on master
  service: name=kube-controller-manager state=restarted enabled=yes
  when: role == 'master'

- name: restart and enable kube-scheduler on master
  service: name=kube-scheduler state=restarted enabled=yes
  when: role == 'master'

- name: create flannel-config.json on master
  template: src=templates/flannel-config.json dest=/root/flannel-config.json
  when: role == 'master'

- name: set flannel config in etcd database on master
  command: curl -L http://{{ inventory_hostname }}:2379/v2/keys/coreos.com/network/config -XPUT --data-urlencode value@/root/flannel-config.json
  when: role == 'master'

- name: configure /etc/kubernetes/kubelet on nodes
  template: src=templates/kubernetes_kubelet dest=/etc/kubernetes/kubelet
  when: role == 'node'

- name: configure /etc/kubernets/proxy on nodes
  template: src=templates/kubernetes_proxy dest=/etc/kubernetes/proxy
  when: role == 'node'

- name: restart and enable docker on nodes
  service: name=docker state=restarted enabled=yes
  when: role == 'node'

- name: restart and enable kube-proxy on node
  service: name=kube-proxy state=restarted enabled=yes
  when: role == 'node'

- name: restart and enable kubelet on node
  service: name=kubelet state=restarted enabled=yes
  when: role == 'node'

- name: configure flannel
  template: src=templates/sysconfig_flanneld dest=/etc/sysconfig/flanneld

- name: restart and enable flanneld
  service: name=flanneld state=restarted enabled=yes

- name: reboot each system
  shell: sleep 2 && systemctl reboot
  async: 1
  poll: 0
  ignore_errors: true

- name: wait for server to come back
  local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300 port=22
  sudo: false
