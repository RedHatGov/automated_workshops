- name: set selinux booleans to allow pods to use fusefs
  seboolean: name={{ item }} state=yes persistent=yes
  when: role == 'node'
  with_items: "{{ selinux_bools }}"

- name: create kubernetes templates for demo applications
  template: src=../templates/{{ item }} dest=/root/{{ item }}
  when: role == 'master'
  with_items: "{{ kube_templates }}"

- name: pull down the application demo image
  command: docker pull jeduncan/php-demo-app
  when: role == 'node'

- name: pull down the gluster server image
  docker:
    registry: "registry.access.redhat.com"
    image: "registry.access.redhat.com/rhgs3/rhgs-server-rhel7"
    state: present
    insecure_registry: yes
  when: role == 'node'

# As of right now, docker_container requires py-docker to be isntalled. This isn't available in the baseos for Atomic Host.
# I opened https://github.com/ansible/ansible-modules-core/issues/3762 to hopefully help address this
# - name: create glusterdata container
#   docker_container:
#     name: glusterdata
#     image: registry.access.redhat.com/rhgs3/rhgs-server-rhel7
#     volumes:
#       - /etc/glusterfs[:z]
#       - /var/lib/glusterd[:z]
#       - /var/log/glusterfs/var/log/glusterfs[:z]
#       - /sys/fs/cgroup[:ro]
#     command: /usr/sbin/setup.sh
#     detach: False
#   when: role == 'node'
#
# - name: create glusterfs server container
#   docker_container:
#     name: gluster-fs
#     image: registry.access.redhat.com/rhgs3/rhgs-server-rhel7
#     privileged: yes
#     network_mode: host
#     volumes_from: glusterdata
#     volumes:
#       - /mnt/brick1:/mnt/container_brick1[:z]

- name: create glusterdata container
  command: docker run --name glusterdata  -v /etc/glusterfs:/etc/glusterfs:z -v /var/lib/glusterd:/var/lib/glusterd:z -v /var/log/glusterfs:/var/log/glusterfs:z -v /sys/fs/cgroup:/sys/fs/cgroup:ro registry.access.redhat.com/rhgs3/rhgs-server-rhel7 /usr/sbin/setup.sh
  when: role == 'node'

- name: create glusterfs server container
  command: docker run -d --restart=always --privileged=true --net=host --name gluster_server --volumes-from glusterdata -v /mnt/brick1:/mnt/container_brick1:z registry.access.redhat.com/rhgs3/rhgs-server-rhel7
  when: role == 'node'

# since this is in the container and the docker_container module doesn't yet work in Atomic, this is a hack to let the service get started up
- name: wait for a few seconds
  command: sleep 3

- name: execute peer probe
  command: docker exec -i gluster_server /bin/bash -c 'gluster peer probe kube2.example.com'
  when: inventory_hostname == 'kube1'

- name: create a directory for a volume
  command: docker exec -i gluster_server /bin/bash -c 'mkdir -m 0777 /mnt/container_brick1/demo_vol'
  when: role == 'node'

- name: create a gluster volume
  command: docker exec -i gluster_server /bin/bash -c 'gluster volume create demo_vol kube1.example.com:/mnt/container_brick1/demo_vol'
  when: inventory_hostname == 'kube1'

- name: start the gluster volume
  command: docker exec -i gluster_server /bin/bash -c 'gluster volume start demo_vol'
  when: inventory_hostname == 'kube1'

- name: create demo services, pods, and endpoints
  command: kubectl create -f /root/{{ item }}
  when: role == 'master'
  with_items: "{{ kube_templates }}"
